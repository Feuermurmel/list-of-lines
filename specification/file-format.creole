= File Format

List-of-Lines defines that all `.lol` files are valid [[http://json.org/|JSON]] files with a specific structure, which is described in this chapter. This chapter makes use of JSON-specific terms such as //object//, //array//, //string// and so on. These terms should be interpreted with the meaning given to them in [[https://tools.ietf.org/html/rfc7159|RFC 7159]]. Where it would be ambiguous, the terms are prefixed with //JSON//, as in //JSON string// when they are used in that sense.

Following the use of JSON, `.lol` files contain a hierarchy of object of different types. Each of these types are described in their own section in this chapter. An `.lol` file aways contains a single, complete object of type `document`.


== Conventions used in examples


== Types

=== JSON Types 

The JSON specification defines the 4 types //object//, //array//, //number//, //string//, and the special values `null`, `true` and `false`. In this chapter, `<object>`, `<array>`, `<number>` and `<string>` is used to describe a JSON value of one of these types.

Additionally, `<bool>` is used to describe one of the values `true` or `false` and <integer> is used to describe a number which does not have a fractional part. Integers must be written without a decimal point and may not be written in scientific notation.

{{{
object := // A JSON object containing key-value-pairs.
array := // A JSON array containing a sequence of values.
number := // A number in decimal or scientific notation.
integer := // A number without a fractional part.
string := // A unicode string.
bool := true | false
}}}


=== 'document' Type

{{{
document := {
	"version": "1",
	"attributes": <attributes>,
	"dimensions": 0 | 1 | 2 | 3,
	"coordinates": [ <coordinate> ... ]
	"layers": [ <layer> ... ]
}
}}}


Contains a number describin


=== 'coordinate' Type

{{{
coordinate := 0-coordinate | 1-coordinate | 2-coordinate | 3-coordinate
0-coordinate := []
1-coordinate := [<coordinate-number>] | [<infinity>]
2-coordinate := [<coordinate-number>, <coordinate-number>]
              | [<infinity>, <coordinate-number>]
              | [<coordinate-number>, <infinity>]
3-coordinate := [<coordinate-number>, <coordinate-number>, <coordinate-number>]
              | [<infinity>, <coordinate-number>, <coordinate-number>]
              | [<coordinate-number>, <infinity>, <coordinate-number>]
              | [<coordinate-number>, <coordinate-number>, <infinity>]
coordinate-number := <number> | [<numerator>, <denominator>]
numerator
infinity := "inf" | "-inf"
}}}


=== 'layer'

{{{
layer := {
	"name": <string>,
	"attributes": <attributes>,
	"simplexes"
}
}}}
